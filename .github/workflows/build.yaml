name: Build

on:
  push:
    branches: ["**"]
    tags-ignore: ["**"]
    paths-ignore:
      - "**.md"
      - LICENSE-Apache
      - LICENSE-MIT
  pull_request:
    paths-ignore:
      - "**.md"
      - LICENSE-Apache
      - LICENSE-MIT
  workflow_dispatch:

jobs:
  powerset:
    name: Type checking (${{ matrix.rust.name }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - { version: "1.67.0", name: MSRV }
          - { version: stable, name: stable }

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust.version }}

      - name: Install cargo-hack
        shell: bash
        run: |
          curl -LsSf https://github.com/taiki-e/cargo-hack/releases/latest/download/cargo-hack-x86_64-unknown-linux-gnu.tar.gz \
          | tar xzf - -C ~/.cargo/bin

      - name: Cache cargo output
        uses: Swatinem/rust-cache@v2

      - name: Type checking
        run: |
          cargo hack check --feature-powerset --exclude-features default

  tests:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Run test suite
        run: cargo test

  formatting:
    name: Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Run clippy
        run: cargo clippy --all-features
